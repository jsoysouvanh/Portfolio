{"categories":[{"link":"/categories/projects/","name":"Projects","slug":"Projects"}],"pages":[],"posts":[{"link":"/posts/lysfangha/","text":"Overview Team project: See credits\rTech stack: Unity 2021, C#, Visual Studio, Perforce, Jira Platforms: Windows / Nintendo Switch Rewind time to create clones of your past-selves, and fight with an army of your own. Become legion and triumph over hordes of monsters.\nPersonal contribution Game framework Some AIs behaviours（behaviour tree） Save system Arenas gameflow and architecture Enemies spawn system Buff / debuff system Level streaming system Achievements system（Steamworks + Epic Online Services） Combat dynamic music Optimization (pooling system\u0026hellip;) General debugging And more\u0026hellip; ","title":"Lysfanga: The Time Shift Warrior"},{"link":"/posts/postbird-in-provence/","text":"Overview Team project: 2 producers, 5 programmers, 2 game designers, 3 artists, 2 sound designers Dev time: Roughly half a year Tech stack: Unity 2019.4, C#, Visual Studio 2019, Perforce, Trello Platforms: Windows / Nintendo Switch Postbird in Provence is my graduation project at Isart Digital. It\u0026rsquo;s a cute adventure game that was initially developed for Nintendo Switch, making use of most of the features the joycons have to offer (HD haptics, gyroscope, accelerometer\u0026hellip;). It was a nice technical challenge to try to reach 60 FPS on the platform.\nPostbird in Provence 2021 by ISART DIGITAL\r","title":"Postbird in Provence"},{"link":"/posts/refureku/","text":"Overview Solo project Tech stack: C++17, libclang, toml11\r, Visual Studio 2019, Git, Trello Target platforms : Windows / Linux / MacOS Refureku\ris a C++17 dynamic reflection library I wrote as a personnal project in my free time. The github repository has a (hopefully nice) README highlighting the library main functionalities, as well as a full wiki\rgoing into more details. There\u0026rsquo;s not much to write here, just check the repository out ;)\n","title":"Refureku"},{"link":"/posts/lambos-tale/","text":"Overview Team project: 4 programmers, 4 game designers, 3 artists Dev time: 5 weeks (school) Tech stack: Unity 2019.3, C#, Visual Studio 2019, Perforce, Trello Platforms: Windows Lambo\u0026rsquo;s Tale is a Metroidvania game in which we play as Lambo, a little lamb who\u0026rsquo;s trying to take revenge on the wolf gang which bullied his little sister (yes, the plot is messed up).\nLambo's Tale by cfazilleau\rPersonal contribution Procedural generation level system Enemies + AI Redaction of a part of the TDD (Technical Design Document) Camera Character A part of the player controller (jump snap, enemies snap) Interaction system (shop, doors, items) Semi-persistent inventory system Arenas logic Generic feedbacks system (particles, sounds, haptics, camera shakes) Pooling system LD gimmicks (doors, keys, destructibles, spikes, pickable items) Loading screen Damage feedback system FTUE (First Time User Experience - Tutorial) gameflow Shop Assets integration (animations, sprites) ","title":"Lambo's Tale"},{"link":"/posts/turbo-engine/","text":"\rOverview Team project: 4 programmers Dev time: 5 months (school) Tech stack: C++17, Visual Studio 2017, Git, Trello, Python 3.7, Qt, GLFW, PhysX, FMOD, nlohmann json, OpenGL, Freetype, stb_image, Glew, Autodesk FBX SDK, TinyObjLoader, SOL2, RuntimeCompiledCPlusPlus Platforms: Windows The Turbo Engine is a 3D game engine 3 amazing teammates and I developed as third year students. We also developed an editor, and made a small game with it.\nPersonal contribution Maths library (Vector2-3-4, Matrix4, Quaternions\u0026hellip;) and its unit tests C++ callback and event system Global engine logic (main loop, scene management, time management) ECS (Entity Component System) Some basic components (Transform) Projects and assets management system Physics library wrapping and implementation Reflection and serialization system Hotreload system Editor inspector (generic widgets generation for user scripts + engine specific components wrapping) Physics based picking, gizmos, multiple viewports handling and scene free controller A great part of the game (concept, riddles) ","title":"Turbo Engine"},{"link":"/posts/stellar-pulse/","text":"Overview Team project: 3 programmers, 4 game designers Dev time: 2 weeks Tech stack: Unreal Engine 4, C++, Visual Studio 2017, Git, Trello, Slack Platforms: Windows (Oculus Rift) Stellar Pulse is a VR rythm shooting game in which the player controls two spaceships and makes them go through rings following the beat.\nPersonal contribution Enemies + AI Spaceship shooting system (auto-aim, beam particles) Generic pooling system (asteroids, enemies, bullets, rings\u0026hellip;) Buttons (menu + in-game) Splash screen Spaceship HUD (score + combos) Sounds \u0026amp; Particles integration ","title":"Stellar Pulse"}],"tags":[{"link":"/tags/c%23/","name":"C#","slug":"C#"},{"link":"/tags/c++/","name":"C++","slug":"C++"},{"link":"/tags/git/","name":"Git","slug":"Git"},{"link":"/tags/library/","name":"Library","slug":"Library"},{"link":"/tags/nintendo-switch/","name":"Nintendo Switch","slug":"Nintendo Switch"},{"link":"/tags/perforce/","name":"Perforce","slug":"Perforce"},{"link":"/tags/pro/","name":"Pro","slug":"Pro"},{"link":"/tags/school/","name":"School","slug":"School"},{"link":"/tags/unity/","name":"Unity","slug":"Unity"},{"link":"/tags/unreal-engine-4/","name":"Unreal Engine 4","slug":"Unreal Engine 4"},{"link":"/tags/vr/","name":"VR","slug":"VR"}]}